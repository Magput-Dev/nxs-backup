name: Release

on:
  push:
    tags:
    - 'v*'

jobs:

  build-and-publish-release:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
        - os: ubuntu-latest
          TARGET: arm

        - os: ubuntu-latest
          TARGET: arm64

        - os: ubuntu-latest
          TARGET: amd64

    steps:
    - name: Building ${{ matrix.TARGET }}
      run: echo "${{ matrix.TARGET }}"

    - uses: actions/checkout@v4

    - uses: actions/setup-go@v5
      name: Set up Go
      with:
        go-version: '1.22.6'

    - name: Set version
      run: V=${{ github.ref_name }} && VT="${V#v}" && sed "s@APP_VERSION@$VT@" misc/version.go.in > misc/version.go

    - name: Build
      run: GOOS=linux GOARCH=${{ matrix.TARGET }} CGO_ENABLED=0 go build -ldflags="-s -w" -v -o nxs-backup

    - name: Run UPX
      uses: crazy-max/ghaction-upx@v3
      with:
        version: latest
        files: |
          ./nxs-backup
        args: --best

    - name: Compress
      uses: a7ul/tar-action@v1.2.0
      id: compress
      with:
        command: c
        files: |
          ./nxs-backup
          ./README.md
          ./LICENSE
        outPath: nxs-backup-${{ matrix.TARGET }}.tar.gz

    - uses: actions/upload-artifact@v4
      with:
        name: nxs-backup-${{ matrix.TARGET }}.tar.gz
        path: nxs-backup-${{ matrix.TARGET }}.tar.gz

    - uses: softprops/action-gh-release@v2
      name: Upload binaries to release
      if: github.ref_type == 'tag'
      with:
        files: nxs-backup-${{ matrix.TARGET }}.tar.gz
        prerelease: ${{ contains(github.ref_name, 'rc') }}
        append_body: true

  build-and-push-docker:
    needs: build-and-publish-release
    runs-on: ubuntu-latest
    environment: secure
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Set app version
      run: V=${{ github.ref_name }} && VT="${V#v}" && sed "s@APP_VERSION@$VT@" misc/version.go.in > misc/version.go

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Login to Registry Hub
      uses: docker/login-action@v3
      with:
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
        registry: ghcr.io

    - name: Docker meta for binary
      id: meta-bin
      uses: docker/metadata-action@v5
      with:
        images: |
          ghcr.io/magput-dev/nxs-backup-bin
        tags: |
          type=semver,pattern={{version}}
          type=semver,pattern={{major}}.{{minor}}
          type=semver,pattern={{major}}
          type=sha,prefix=,format=long

    - name: Docker meta for alpine
      id: meta-alpine
      uses: docker/metadata-action@v5
      with:
        images: |
          ghcr.io/magput-dev/nxs-backup
        flavor: |
          latest=false
        tags: |
          type=semver,pattern={{version}},suffix=-alpine
          type=semver,pattern={{major}}.{{minor}},suffix=-alpine
          type=semver,pattern={{major}},suffix=-alpine
          type=sha,prefix=,format=long
          alpine

    - name: Docker meta for debian
      id: meta-debian
      uses: docker/metadata-action@v5
      with:
        images: |
          ghcr.io/magput-dev/nxs-backup
        tags: |
          type=semver,pattern={{version}}
          type=semver,pattern={{version}},suffix=-debian
          type=semver,pattern={{major}}.{{minor}}
          type=semver,pattern={{major}}.{{minor}},suffix=-debian
          type=semver,pattern={{major}}
          type=semver,pattern={{major}},suffix=-debian
          type=sha,prefix=,format=long
          debian

    - name: Docker meta for redis60
      id: meta-redis60
      uses: docker/metadata-action@v5
      with:
        images: |
          ghcr.io/magput-dev/nxs-backup
        tags: |
          type=semver,pattern={{version}},suffix=-redis60
          type=semver,pattern={{major}}.{{minor}},suffix=-redis60
          type=semver,pattern={{major}},suffix=-redis60
          type=sha,prefix=,format=long,suffix=-redis60
          redis60

    - name: Docker meta for psql12
      id: meta-psql12
      uses: docker/metadata-action@v5
      with:
        images: |
          ghcr.io/magput-dev/nxs-backup
        tags: |
          type=semver,pattern={{version}},suffix=-psql12
          type=semver,pattern={{major}}.{{minor}},suffix=-psql12
          type=semver,pattern={{major}},suffix=-psql12
          type=sha,prefix=,format=long,suffix=-psql12
          psql12

    - name: Docker meta for mysql80
      id: meta-mysql80
      uses: docker/metadata-action@v5
      with:
        images: |
          ghcr.io/magput-dev/nxs-backup
        tags: |
          type=semver,pattern={{version}},suffix=-mysql80
          type=semver,pattern={{major}}.{{minor}},suffix=-mysql80
          type=semver,pattern={{major}},suffix=-mysql80
          type=sha,prefix=,format=long,suffix=-mysql80
          mysql80

    - name: Build and push binary
      uses: docker/build-push-action@v5
      with:
        context: .
        file: .docker/Dockerfile-bin
        platforms: linux/amd64,linux/arm64,linux/arm/v8
        push: true
        tags: ${{ steps.meta-bin.outputs.tags }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
        build-args: VERSION=${{ github.ref_name }}

    - name: Build and push alpine
      uses: docker/build-push-action@v5
      with:
        context: .
        file: .docker/Dockerfile-alpine
        build-contexts: |
          ghcr.io/magput-dev/nxs-backup-bin=docker-image://ghcr.io/magput-dev/nxs-backup-bin:${{ github.sha }}
        platforms: linux/amd64,linux/arm64,linux/arm/v8
        push: true
        tags: ${{ steps.meta-alpine.outputs.tags }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Build and push debian
      uses: docker/build-push-action@v5
      with:
        context: .
        file: .docker/Dockerfile-debian
        build-contexts: |
          ghcr.io/magput-dev/nxs-backup-bin=docker-image://ghcr.io/magput-dev/nxs-backup-bin:${{ github.sha }}
        platforms: linux/amd64,linux/arm64,linux/arm/v8
        push: true
        tags: ${{ steps.meta-debian.outputs.tags }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Build and push redis60
      uses: docker/build-push-action@v5
      with:
        context: .
        file: .docker/redis/Dockerfile-redis60
        build-contexts: |
          ghcr.io/magput-dev/nxs-backup-bin=docker-image://ghcr.io/magput-dev/nxs-backup-bin:${{ github.sha }}
        platforms: linux/amd64,linux/arm64,linux/arm/v8
        push: true
        tags: ${{ steps.meta-redis60.outputs.tags }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Build and push psql12
      uses: docker/build-push-action@v5
      with:
        context: .
        file: .docker/postgres/Dockerfile-psql12
        build-contexts: |
          ghcr.io/magput-dev/nxs-backup-bin=docker-image://ghcr.io/magput-dev/nxs-backup-bin:${{ github.sha }}
        platforms: linux/amd64,linux/arm64,linux/arm/v8
        push: true
        tags: ${{ steps.meta-psql12.outputs.tags }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Build and push mysql80
      uses: docker/build-push-action@v5
      with:
        context: .
        file: .docker/mysql/Dockerfile-mysql80
        build-contexts: |
          ghcr.io/magput-dev/nxs-backup-bin=docker-image://ghcr.io/magput-dev/nxs-backup-bin:${{ github.sha }}
        platforms: linux/amd64,linux/arm64,linux/arm/v8
        push: true
        tags: ${{ steps.meta-mysql80.outputs.tags }}
        cache-from: type=gha
        cache-to: type=gha,mode=max